<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.yida.boottracer.repo.impl.mybatis.mapper.BizCodeMapper">
	<resultMap id="BaseResultMap"
		type="com.yida.boottracer.domain.BizCode">
		<id column="ID" jdbcType="INTEGER" property="ID" />
		<result column="ApplyID" jdbcType="INTEGER" property="applyID" />
		<result column="Seq" jdbcType="INTEGER" property="seq" />
		<result column="BarCode" jdbcType="VARCHAR" property="barCode" />
		<result column="QRBarcode" jdbcType="VARCHAR" property="QRBarcode" />
		<result column="Delivered" jdbcType="BIT" property="delivered" />
		<result column="Activated" jdbcType="BIT" property="activated" />
		<result column="Version" jdbcType="BIGINT" property="version" />
		<result column="CreatedAt" jdbcType="TIMESTAMP"
			property="createdAt" />
	</resultMap>
	<sql id="Base_Column_List">
		ID, ApplyID, BarCode, QRBarcode, Delivered, Activated, Version, CreatedAt
	</sql>
	<select id="existTable" parameterType="String"
		resultType="Integer">
		select count(*)
		from information_schema.TABLES
		where LCASE(table_name)='${tableName}'
	</select>
	<update id="dropTable">
		DROP TABLE IF EXISTS ${tableName}
	</update>
    <update id="createCodeTable" parameterType="String">  
	CREATE TABLE `${tableName}` (
		`ID` INT(11) NOT NULL AUTO_INCREMENT,
		`ApplyID` INT(11) NOT NULL,
		`BarCode` VARCHAR(256) NOT NULL COMMENT '一维码',
		`QRBarcode` VARCHAR(256) NOT NULL COMMENT '二维码',
		`Seq` INT(11) NOT NULL COMMENT '序号',
		`Delivered` BIT(1) NOT NULL DEFAULT b'0' COMMENT '已出库',
		`Activated` BIT(1) NOT NULL DEFAULT b'0' COMMENT '已激活',
		`QueryCount` INT(11) NOT NULL DEFAULT '0' COMMENT '查询次数',
		`Version` BIGINT(19) NULL DEFAULT NULL,
		`CreatedAt` DATETIME NULL DEFAULT NULL,
		PRIMARY KEY (`ID`),
		UNIQUE INDEX `BarCode` (`BarCode`),
		INDEX `FK_${tableName}_To_Apply` (`ApplyID`),
		CONSTRAINT `FK_${tableName}_To_Apply` FOREIGN KEY (`ApplyID`) REFERENCES `biz_code_apply` (`ID`) ON UPDATE NO ACTION ON DELETE NO ACTION
	)
	COMMENT=''
	COLLATE='utf8_general_ci'
	ENGINE=InnoDB
	;
    </update>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from ${tablename}
		where ID = #{ID}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from ${tablename}
		where ID = #{ID,jdbcType=INTEGER}
	</delete>
	<insert id="insert"
		parameterType="com.yida.boottracer.domain.BizCode">
		<selectKey keyProperty="ID" order="AFTER"
			resultType="java.lang.Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into ${tablename} (ApplyID,Seq, BarCode, QRBarcode,
		Delivered, Activated, Version,
		CreatedAt)
		values (#{record.applyID,jdbcType=INTEGER},
		#{record.seq,jdbcType=INTEGER},			
		#{record.barCode,jdbcType=VARCHAR},
		#{record.QRBarcode,jdbcType=VARCHAR},
		#{record.delivered,jdbcType=BIT}, #{record.activated,jdbcType=BIT},
		#{record.version,jdbcType=BIGINT},
		#{record.createdAt,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective"
		parameterType="com.yida.boottracer.domain.BizCode">
		<selectKey keyProperty="ID" order="AFTER"
			resultType="java.lang.Integer">
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into ${tablename}
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="record.applyID != null">
				ApplyID,
			</if>
			<if test="record.seq != null">
				Seq,
			</if>					
			<if test="record.barCode != null">
				BarCode,
			</if>
			<if test="record.QRBarcode != null">
				QRBarcode,
			</if>
			<if test="record.delivered != null">
				Delivered,
			</if>
			<if test="record.activated != null">
				Activated,
			</if>
			<if test="record.version != null">
				Version,
			</if>
			<if test="record.createdAt != null">
				CreatedAt,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="record.applyID != null">
				#{record.applyID,jdbcType=INTEGER},
			</if>
			<if test="record.seq != null">
				#{record.seq,jdbcType=INTEGER},
			</if>					
			<if test="record.barCode != null">
				#{record.barCode,jdbcType=VARCHAR},
			</if>
			<if test="record.QRBarcode != null">
				#{record.QRBarcode,jdbcType=VARCHAR},
			</if>
			<if test="record.delivered != null">
				#{record.delivered,jdbcType=BIT},
			</if>
			<if test="record.activated != null">
				#{record.activated,jdbcType=BIT},
			</if>
			<if test="record.version != null">
				#{record.version,jdbcType=BIGINT},
			</if>
			<if test="record.createdAt != null">
				#{record.createdAt,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.yida.boottracer.domain.BizCode">
		update ${tablename}
		<set>
			<if test="record.applyID != null">
				ApplyID = #{record.applyID,jdbcType=INTEGER},
			</if>
			<if test="record.seq != null">
				Seq = #{record.seq,jdbcType=INTEGER},
			</if>					
			<if test="record.barCode != null">
				BarCode = #{record.barCode,jdbcType=VARCHAR},
			</if>
			<if test="record.QRBarcode != null">
				QRBarcode = #{record.QRBarcode,jdbcType=VARCHAR},
			</if>
			<if test="record.delivered != null">
				Delivered = #{record.delivered,jdbcType=BIT},
			</if>
			<if test="record.activated != null">
				Activated = #{record.activated,jdbcType=BIT},
			</if>
			<if test="record.version != null">
				Version = #{record.version,jdbcType=BIGINT},
			</if>
			<if test="record.createdAt != null">
				CreatedAt = #{record.createdAt,jdbcType=TIMESTAMP},
			</if>
		</set>
		where ID = #{record.ID,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.yida.boottracer.domain.BizCode">
		update ${tablename}
		set ApplyID = #{record.applyID,jdbcType=INTEGER},
		Seq = #{record.seq,jdbcType=INTEGER},
		BarCode = #{record.barCode,jdbcType=VARCHAR},
		QRBarcode = #{record.QRBarcode,jdbcType=VARCHAR},
		Delivered = #{record.delivered,jdbcType=BIT},
		Activated = #{record.activated,jdbcType=BIT},
		Version = #{record.version,jdbcType=BIGINT},
		CreatedAt = #{record.createdAt,jdbcType=TIMESTAMP}
		where ID = #{record.ID,jdbcType=INTEGER}
	</update>
</mapper>